{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { deleteBook, deleteBookSuccess, loadBooks, loadBooksSuccess } from './book.actions';\nimport { map, mergeMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/book.service\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@angular/router\";\nexport class BookEffects {\n  constructor(service, actions$, router) {\n    this.service = service;\n    this.actions$ = actions$;\n    this.router = router;\n    this.$loadBooks = createEffect(() => this.actions$.pipe(ofType(loadBooks), mergeMap(() => this.service.getAllBooks().pipe(map(books => ({\n      type: loadBooksSuccess.type,\n      payload: books\n    }))))));\n    this.$deleteBook = createEffect(() => this.actions$.pipe(ofType(deleteBook), mergeMap(action => this.service.deleteBook(action.bookId).pipe(map(() => ({\n      type: deleteBookSuccess.type\n    })), tap(() => this.router.navigate(['/books']))))));\n  }\n}\nBookEffects.ɵfac = function BookEffects_Factory(t) {\n  return new (t || BookEffects)(i0.ɵɵinject(i1.BookService), i0.ɵɵinject(i2.Actions), i0.ɵɵinject(i3.Router));\n};\nBookEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookEffects,\n  factory: BookEffects.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAE7D,SACEC,UAAU,EACVC,iBAAiB,EACjBC,SAAS,EACTC,gBAAgB,QACX,gBAAgB;AACvB,SAASC,GAAG,EAAEC,QAAQ,EAAaC,GAAG,QAAQ,MAAM;;;;;AAKpD,OAAM,MAAOC,WAAW;EACtBC,YACUC,OAAoB,EACpBC,QAAiB,EACjBC,MAAc;IAFd,YAAO,GAAPF,OAAO;IACP,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IAGhB,eAAU,GAAGb,YAAY,CAAC,MACxB,IAAI,CAACY,QAAQ,CAACE,IAAI,CAChBb,MAAM,CAACG,SAAS,CAAC,EACjBG,QAAQ,CAAC,MACP,IAAI,CAACI,OAAO,CACTI,WAAW,EAAE,CACbD,IAAI,CACHR,GAAG,CAAEU,KAAK,KAAM;MAAEC,IAAI,EAAEZ,gBAAgB,CAACY,IAAI;MAAEC,OAAO,EAAEF;IAAK,CAAE,CAAC,CAAC,CAClE,CACJ,CACF,CACF;IAED,gBAAW,GAAGhB,YAAY,CAAC,MACzB,IAAI,CAACY,QAAQ,CAACE,IAAI,CAChBb,MAAM,CAACC,UAAU,CAAC,EAClBK,QAAQ,CAAEY,MAAM,IACd,IAAI,CAACR,OAAO,CAACT,UAAU,CAACiB,MAAM,CAACC,MAAM,CAAC,CAACN,IAAI,CACzCR,GAAG,CAAC,OAAO;MAAEW,IAAI,EAAEd,iBAAiB,CAACc;IAAI,CAAE,CAAC,CAAC,EAC7CT,GAAG,CAAC,MAAM,IAAI,CAACK,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC5C,CACF,CACF,CACF;EAzBE;;AALQZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;AAAA","names":["createEffect","ofType","deleteBook","deleteBookSuccess","loadBooks","loadBooksSuccess","map","mergeMap","tap","BookEffects","constructor","service","actions$","router","pipe","getAllBooks","books","type","payload","action","bookId","navigate","factory"],"sourceRoot":"","sources":["C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\store\\book.effects.ts"],"sourcesContent":["import { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { BookService } from '../services/book.service';\r\nimport {\r\n  deleteBook,\r\n  deleteBookSuccess,\r\n  loadBooks,\r\n  loadBooksSuccess,\r\n} from './book.actions';\r\nimport { map, mergeMap, switchMap, tap } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class BookEffects {\r\n  constructor(\r\n    private service: BookService,\r\n    private actions$: Actions,\r\n    private router: Router\r\n  ) {}\r\n\r\n  $loadBooks = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loadBooks),\r\n      mergeMap(() =>\r\n        this.service\r\n          .getAllBooks()\r\n          .pipe(\r\n            map((books) => ({ type: loadBooksSuccess.type, payload: books }))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n  $deleteBook = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteBook),\r\n      mergeMap((action) =>\r\n        this.service.deleteBook(action.bookId).pipe(\r\n          map(() => ({ type: deleteBookSuccess.type })),\r\n          tap(() => this.router.navigate(['/books']))\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}