{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/book.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/books\"];\n};\nexport class UpdateBookComponent {\n  constructor(service, route, router, formBuilder) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n      this.updateBookForm = this.formBuilder.group({\n        id: [data.id],\n        title: [data.title],\n        author: [data.author],\n        description: [data.description],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)]\n      });\n    });\n  }\n  formatDate(date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    }\n    return date;\n  }\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"]);\n    });\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 34,\n  vars: 3,\n  consts: [[1, \"update-book\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\", 1, \"required\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Book Title\", 1, \"form-control\"], [\"for\", \"description\", 1, \"required\"], [\"type\", \"text\", \"name\", \"description\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Book Description\", 1, \"form-control\"], [\"for\", \"author\", 1, \"required\"], [\"type\", \"text\", \"name\", \"author\", \"id\", \"author\", \"formControlName\", \"author\", \"placeholder\", \"Book Author\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-4\", \"col-xs-4\", \"col-sm-4\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"name\", \"dateStart\", \"id\", \"dateStart\", \"formControlName\", \"dateStart\", \"placeholder\", \"Date Start\", 1, \"form-control\"], [\"for\", \"dateRead\"], [\"type\", \"date\", \"name\", \"dateRead\", \"id\", \"dateRead\", \"formControlName\", \"dateRead\", \"placeholder\", \"Date Read\", 1, \"form-control\"], [\"for\", \"rate\"], [\"type\", \"number\", \"min\", \"0\", \"max\", \"5\", \"name\", \"rate\", \"id\", \"rate\", \"formControlName\", \"rate\", \"placeholder\", \"Book Rate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"routerLink\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"div\", 10)(16, \"div\", 2)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Date Start\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 2)(22, \"label\", 13);\n      i0.ɵɵtext(23, \"Date End\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 10)(26, \"div\", 2)(27, \"label\", 15);\n      i0.ɵɵtext(28, \"Rate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 16);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"button\", 17);\n      i0.ɵɵtext(31, \"Update Book\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 18);\n      i0.ɵɵtext(33, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateBookForm);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.MaxValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\".update-book[_ngcontent-%COMP%] {\\r\\n    padding: 0 20% 0 20%;\\r\\n}\\r\\n\\r\\n.required[_ngcontent-%COMP%]:after {\\r\\n    content: \\\"*\\\";\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGRhdGUtYm9vay91cGRhdGUtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi51cGRhdGUtYm9vayB7XHJcbiAgICBwYWRkaW5nOiAwIDIwJSAwIDIwJTtcclxufVxyXG5cclxuLnJlcXVpcmVkOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiKlwiO1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAWA,OAAM,MAAOA,mBAAmB;EAI9BC,YACUC,OAAoB,EACpBC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAHxB,YAAO,GAAPH,OAAO;IACP,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;EAClB;EAEHC,QAAQ;IACN,IAAI,CAACJ,OAAO,CAACK,WAAW,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,EAAE,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACvE,IAAI,CAACC,IAAI,GAAGD,IAAI;MAEhB,IAAI,CAACE,cAAc,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;QAC3CL,EAAE,EAAE,CAACE,IAAI,CAACF,EAAE,CAAC;QACbM,KAAK,EAAE,CAACJ,IAAI,CAACI,KAAK,CAAC;QACnBC,MAAM,EAAE,CAACL,IAAI,CAACK,MAAM,CAAC;QACrBC,WAAW,EAAE,CAACN,IAAI,CAACM,WAAW,CAAC;QAC/BC,IAAI,EAAE,CAACP,IAAI,CAACO,IAAI,CAAC;QACjBC,SAAS,EAAE,CAAC,IAAI,CAACC,UAAU,CAACT,IAAI,CAACQ,SAAS,CAAC,CAAC;QAC5CE,QAAQ,EAAE,CAAC,IAAI,CAACD,UAAU,CAACT,IAAI,CAACU,QAAQ,CAAC;OAC1C,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAD,UAAU,CAACE,IAAW;IACpB,IAAIA,IAAI,EAAE;MACR,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC;;IAGrD,OAAOH,IAAI;EACb;EAEAI,QAAQ;IACN,IAAI,CAACzB,OAAO,CAAC0B,UAAU,CAAC,IAAI,CAACd,cAAc,CAACe,KAAK,CAAC,CAAClB,SAAS,CAACC,IAAI,IAAG;MAClE,IAAI,CAACR,MAAM,CAAC0B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;;AAvCW9B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhCC,8BAAyB;MACcA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACtDD,8BAAwB;MACgBA,qBAAK;MAAAA,iBAAQ;MACjDA,2BAAiH;MACrHA,iBAAM;MACNA,8BAAwB;MACsBA,2BAAW;MAAAA,iBAAQ;MAC7DA,2BAAyI;MAC7IA,iBAAM;MACNA,+BAAwB;MACiBA,uBAAM;MAAAA,iBAAQ;MACnDA,4BAAqH;MACzHA,iBAAM;MACNA,+BAAiB;MAGkBA,2BAAU;MAAAA,iBAAQ;MACzCA,6BAA6H;MACjIA,iBAAM;MAEVA,gCAAwC;MAEVA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAAyH;MAC7HA,iBAAM;MAEVA,gCAAwC;MAEdA,qBAAI;MAAAA,iBAAQ;MAC9BA,6BAA+H;MACnIA,iBAAM;MAGdA,mCAA8C;MAAAA,4BAAW;MAAAA,iBAAS;MAClEA,mCAA0E;MAAAA,uBAAM;MAAAA,iBAAS;;;MAlCvFA,eAA4B;MAA5BA,8CAA4B;MAkCkBA,gBAAyB;MAAzBA,uDAAyB","names":["UpdateBookComponent","constructor","service","route","router","formBuilder","ngOnInit","getBookById","snapshot","params","id","subscribe","data","book","updateBookForm","group","title","author","description","rate","dateStart","formatDate","dateRead","date","Date","toISOString","substring","onSubmit","updateBook","value","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\components\\update-book\\update-book.component.ts","C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\components\\update-book\\update-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Book from 'src/app/interfaces/book';\nimport { BookService } from 'src/app/services/book.service';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css'],\n})\nexport class UpdateBookComponent implements OnInit {\n  book!: Book;\n  updateBookForm!: FormGroup;\n  \n  constructor(\n    private service: BookService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n\n      this.updateBookForm = this.formBuilder.group({\n        id: [data.id],\n        title: [data.title],\n        author: [data.author],\n        description: [data.description],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)],\n      })\n    });\n  }\n\n  formatDate(date?: Date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0,10);\n    }\n\n    return date;\n  }\n\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"])\n    })\n  }\n}\n","<div class=\"update-book\">\n    <form [formGroup]=\"updateBookForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"title\" class=\"required\">Title</label>\n            <input type=\"text\" class=\"form-control\" name=\"title\" id=\"title\" formControlName=\"title\" placeholder=\"Book Title\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\" class=\"required\">Description</label>\n            <input type=\"text\" class=\"form-control\" name=\"description\" id=\"description\" formControlName=\"description\" placeholder=\"Book Description\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"author\" class=\"required\">Author</label>\n            <input type=\"text\" class=\"form-control\" name=\"author\" id=\"author\" formControlName=\"author\" placeholder=\"Book Author\">\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4 col-xs-4 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"dateStart\">Date Start</label>\n                    <input type=\"date\" class=\"form-control\" name=\"dateStart\" id=\"dateStart\" formControlName=\"dateStart\" placeholder=\"Date Start\">\n                </div>\n            </div>\n            <div class=\"col-md-4 col-xs-4 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"dateRead\">Date End</label>\n                    <input type=\"date\" class=\"form-control\" name=\"dateRead\" id=\"dateRead\" formControlName=\"dateRead\" placeholder=\"Date Read\">\n                </div>\n            </div>\n            <div class=\"col-md-4 col-xs-4 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"rate\">Rate</label>\n                    <input type=\"number\" min=\"0\" max=\"5\" class=\"form-control\" name=\"rate\" id=\"rate\" formControlName=\"rate\" placeholder=\"Book Rate\">\n                </div>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">Update Book</button>\n        <button type=\"submit\" class=\"btn btn-secondary\" [routerLink]=\"['/books']\">Cancel</button>\n    </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}