{"ast":null,"code":"import { createReducer } from '@ngrx/store';\nexport const initialState = {\n  books: []\n};\nconst _bookReducer = createReducer(initialState);\nexport function BookReducer(state, action) {\n  return _bookReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,QAAoB,aAAa;AAIvD,OAAO,MAAMC,YAAY,GAAc;EACrCC,KAAK,EAAE;CACR;AAED,MAAMC,YAAY,GAAGH,aAAa,CAChCC,YAAY,CAEb;AAED,OAAM,SAAUG,WAAW,CAACC,KAA4B,EAAEC,MAAc;EACtE,OAAOH,YAAY,CAACE,KAAK,EAAEC,MAAM,CAAC;AACpC","names":["createReducer","initialState","books","_bookReducer","BookReducer","state","action"],"sourceRoot":"","sources":["C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\store\\book.reducer.ts"],"sourcesContent":["import { createReducer, on, Action } from '@ngrx/store';\r\nimport { loadBooksSuccess } from './book.actions';\r\nimport { BookState } from './book.state';\r\n\r\nexport const initialState: BookState = {\r\n  books: [],\r\n};\r\n\r\nconst _bookReducer = createReducer(\r\n  initialState,\r\n  //on(loadBooksSuccess, (state, { payload }) => ({ ...state, books: payload }))\r\n);\r\n\r\nexport function BookReducer(state: BookState | undefined, action: Action) {\r\n  return _bookReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}