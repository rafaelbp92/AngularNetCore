{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/book.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/books\"];\n};\nfunction UpdateBookComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 6);\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"textarea\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 8);\n    i0.ɵɵtext(12, \"Author\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 3)(17, \"label\", 12);\n    i0.ɵɵtext(18, \"Date Start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 3)(22, \"label\", 14);\n    i0.ɵɵtext(23, \"Date End\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 11)(26, \"div\", 3)(27, \"label\", 16);\n    i0.ɵɵtext(28, \"Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"button\", 18);\n    i0.ɵɵtext(31, \"Update Book\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"button\", 19);\n    i0.ɵɵtext(33, \" Cancel \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.updateBookForm);\n    i0.ɵɵadvance(31);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nexport class UpdateBookComponent {\n  constructor(service, route, router, formBuilder) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n      this.updateBookForm = this.formBuilder.group({\n        id: [data.id],\n        title: [data.title],\n        author: [data.author],\n        description: [data.description],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)]\n      });\n    });\n  }\n  formatDate(date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    }\n    return date;\n  }\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate(['/books']);\n    });\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"update-book\", 4, \"ngIf\"], [1, \"update-book\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\", 1, \"required\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Book Title\", 1, \"form-control\"], [\"for\", \"description\", 1, \"required\"], [\"name\", \"description\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Book Description\", 1, \"form-control\"], [\"for\", \"author\", 1, \"required\"], [\"type\", \"text\", \"name\", \"author\", \"id\", \"author\", \"formControlName\", \"author\", \"placeholder\", \"Book Author\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-4\", \"col-xs-4\", \"col-sm-4\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"name\", \"dateStart\", \"id\", \"dateStart\", \"formControlName\", \"dateStart\", \"placeholder\", \"Date Start\", 1, \"form-control\"], [\"for\", \"dateRead\"], [\"type\", \"date\", \"name\", \"dateRead\", \"id\", \"dateRead\", \"formControlName\", \"dateRead\", \"placeholder\", \"Date Read\", 1, \"form-control\"], [\"for\", \"rate\"], [\"type\", \"number\", \"min\", \"0\", \"max\", \"5\", \"name\", \"rate\", \"id\", \"rate\", \"formControlName\", \"rate\", \"placeholder\", \"Book Rate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"routerLink\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UpdateBookComponent_div_0_Template, 34, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.book);\n    }\n  },\n  styles: [\".update-book[_ngcontent-%COMP%] {\\r\\n    padding: 0 20% 0 20%;\\r\\n}\\r\\n\\r\\n.required[_ngcontent-%COMP%]:after {\\r\\n    content: \\\"*\\\";\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGRhdGUtYm9vay91cGRhdGUtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi51cGRhdGUtYm9vayB7XHJcbiAgICBwYWRkaW5nOiAwIDIwJSAwIDIwJTtcclxufVxyXG5cclxuLnJlcXVpcmVkOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiKlwiO1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IAAAA,8BAAsC;IACDA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IACxDA,8BAAwB;IACcA,qBAAK;IAAAA,iBAAQ;IACjDA,2BAOE;IACJA,iBAAM;IACNA,8BAAwB;IACoBA,2BAAW;IAAAA,iBAAQ;IAC7DA,8BAMY;IACdA,iBAAM;IACNA,+BAAwB;IACeA,uBAAM;IAAAA,iBAAQ;IACnDA,4BAOE;IACJA,iBAAM;IACNA,gCAAiB;IAGYA,2BAAU;IAAAA,iBAAQ;IACzCA,6BAOE;IACJA,iBAAM;IAERA,gCAAwC;IAEdA,yBAAQ;IAAAA,iBAAQ;IACtCA,6BAOE;IACJA,iBAAM;IAERA,gCAAwC;IAElBA,qBAAI;IAAAA,iBAAQ;IAC9BA,6BASE;IACJA,iBAAM;IAGVA,mCAA8C;IAAAA,4BAAW;IAAAA,iBAAS;IAClEA,mCAA0E;IACxEA,yBACF;IAAAA,iBAAS;;;;IA/ELA,eAA4B;IAA5BA,iDAA4B;IA6EgBA,gBAAyB;IAAzBA,uDAAyB;;;ACnE7E,OAAM,MAAOC,mBAAmB;EAI9BC,YACUC,OAAoB,EACpBC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAHxB,YAAO,GAAPH,OAAO;IACP,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;EAClB;EAEHC,QAAQ;IACN,IAAI,CAACJ,OAAO,CACTK,WAAW,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,EAAE,CAAC,CAC1CC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACC,IAAI,GAAGD,IAAI;MAEhB,IAAI,CAACE,cAAc,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;QAC3CL,EAAE,EAAE,CAACE,IAAI,CAACF,EAAE,CAAC;QACbM,KAAK,EAAE,CAACJ,IAAI,CAACI,KAAK,CAAC;QACnBC,MAAM,EAAE,CAACL,IAAI,CAACK,MAAM,CAAC;QACrBC,WAAW,EAAE,CAACN,IAAI,CAACM,WAAW,CAAC;QAC/BC,IAAI,EAAE,CAACP,IAAI,CAACO,IAAI,CAAC;QACjBC,SAAS,EAAE,CAAC,IAAI,CAACC,UAAU,CAACT,IAAI,CAACQ,SAAS,CAAC,CAAC;QAC5CE,QAAQ,EAAE,CAAC,IAAI,CAACD,UAAU,CAACT,IAAI,CAACU,QAAQ,CAAC;OAC1C,CAAC;IACJ,CAAC,CAAC;EACN;EAEAD,UAAU,CAACE,IAAW;IACpB,IAAIA,IAAI,EAAE;MACR,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;;IAGtD,OAAOH,IAAI;EACb;EAEAI,QAAQ;IACN,IAAI,CAACzB,OAAO,CAAC0B,UAAU,CAAC,IAAI,CAACd,cAAc,CAACe,KAAK,CAAC,CAAClB,SAAS,CAAEC,IAAI,IAAI;MACpE,IAAI,CAACR,MAAM,CAAC0B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;;AAzCW9B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXhCpC,qEAkFM;;;MAlFoBA,+BAAU","names":["i0","UpdateBookComponent","constructor","service","route","router","formBuilder","ngOnInit","getBookById","snapshot","params","id","subscribe","data","book","updateBookForm","group","title","author","description","rate","dateStart","formatDate","dateRead","date","Date","toISOString","substring","onSubmit","updateBook","value","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\components\\update-book\\update-book.component.html","C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\components\\update-book\\update-book.component.ts"],"sourcesContent":["<div class=\"update-book\" *ngIf=\"book\">\n  <form [formGroup]=\"updateBookForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"title\" class=\"required\">Title</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        name=\"title\"\n        id=\"title\"\n        formControlName=\"title\"\n        placeholder=\"Book Title\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\" class=\"required\">Description</label>\n      <textarea\n        class=\"form-control\"\n        name=\"description\"\n        id=\"description\"\n        formControlName=\"description\"\n        placeholder=\"Book Description\"\n      ></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"author\" class=\"required\">Author</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        name=\"author\"\n        id=\"author\"\n        formControlName=\"author\"\n        placeholder=\"Book Author\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateStart\">Date Start</label>\n          <input\n            type=\"date\"\n            class=\"form-control\"\n            name=\"dateStart\"\n            id=\"dateStart\"\n            formControlName=\"dateStart\"\n            placeholder=\"Date Start\"\n          />\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateRead\">Date End</label>\n          <input\n            type=\"date\"\n            class=\"form-control\"\n            name=\"dateRead\"\n            id=\"dateRead\"\n            formControlName=\"dateRead\"\n            placeholder=\"Date Read\"\n          />\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"rate\">Rate</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"5\"\n            class=\"form-control\"\n            name=\"rate\"\n            id=\"rate\"\n            formControlName=\"rate\"\n            placeholder=\"Book Rate\"\n          />\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update Book</button>\n    <button type=\"submit\" class=\"btn btn-secondary\" [routerLink]=\"['/books']\">\n      Cancel\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Book from 'src/app/interfaces/book';\nimport { BookService } from 'src/app/services/book.service';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css'],\n})\nexport class UpdateBookComponent implements OnInit {\n  book!: Book;\n  updateBookForm!: FormGroup;\n\n  constructor(\n    private service: BookService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.service\n      .getBookById(this.route.snapshot.params.id)\n      .subscribe((data) => {\n        this.book = data;\n\n        this.updateBookForm = this.formBuilder.group({\n          id: [data.id],\n          title: [data.title],\n          author: [data.author],\n          description: [data.description],\n          rate: [data.rate],\n          dateStart: [this.formatDate(data.dateStart)],\n          dateRead: [this.formatDate(data.dateRead)],\n        });\n      });\n  }\n\n  formatDate(date?: Date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    }\n\n    return date;\n  }\n\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe((data) => {\n      this.router.navigate(['/books']);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}