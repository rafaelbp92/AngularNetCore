{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nexport class AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  canActivate(route, state) {\n    return this.auth.isAuthenticated$.pipe(tap(loggedIn => {\n      if (!loggedIn) {\n        this.auth.loginWithRedirect();\n      }\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAQA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,OAAO,IAAI,CAACH,IAAI,CAACI,gBAAgB,CAACC,IAAI,CAACR,GAAG,CAACS,QAAQ,IAAG;MACpD,IAAI,CAACA,QAAQ,EAAE;QACb,IAAI,CAACN,IAAI,CAACO,iBAAiB,EAAE;;IAEjC,CAAC,CAAC,CAAC;EACL;;AAjBWT,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;EAAAW,YAFR;AAAM","names":["tap","AuthGuard","constructor","auth","canActivate","route","state","isAuthenticated$","pipe","loggedIn","loginWithRedirect","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rafae\\Documents\\Projects\\linkedin\\AngularNetCore\\AngularNetCore\\ClientApp\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.auth.isAuthenticated$.pipe(tap(loggedIn => {\n      if (!loggedIn) {\n        this.auth.loginWithRedirect();\n      }\n    }));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}